version: 2

jobs:
  build:
    # The resource classes are as follows:
    # small: 1CPU and 1RAM
    # medium: 2CPU and 4RAM (current 1.0 default)
    # large: 4CPU and 8RAM
    ##resource_class: large

    # docker:
    #   - image: n0ts/docker-circleci
    #     user: docker
    #     ##command: [foo, bar]
    #     ##entrypoint: entrypoint.sh
    #     # environment:
    #     #   ENV: CI

    machine: true

      # - image: redis:3

      # - image: mysql:5.7
      #   environment:
      #     MYSQL_ALLOW_EMPTY_PASSWORD: yes
      #     MYSQL_DATABASE: test
      #     MYSQL_USER: test_user
      #     MYSQL_PASSWORD: testpw

      # - image: postgres:9
      #   environment:
      #     POSTGRES_DB: test

    environment:
      - CI: true
      # - MYSQL_DATABASE: test
      # - MYSQL_USER: test_user
      # - MYSQL_PASSWORD: testpw

    working_directory: ~/practice-circleci

    parallelism: 1

    # branches:
    #   only:
    #     - master
    #   ignore:
    #     - develop

    steps:
      - checkout

      # - setup_remote_docker

      - run:
          name: Show resource
          command: |
            cat /proc/cpuinfo
            cat /proc/meminfo
            whoami

      - run:
          name: Show package
          command: |
            dpkg -l

      - run:
          command: |
            docker version
            docker info
            docker-compose version

      - restore_cache:
          keys:
            - my-app-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ .Revision }}-{{ .Environment.CI }}

      - run:
          name: Run test text
          command: |
            mkdir ~/test
            echo "TEST $(date +%Y%m%d%H%M%S)" > ~/test/TEST-$(date +%Y%m%d%H%M%S).txt
            ls -l ~/test
          # shell: /boin/bash
          # environment:
          #   FOO: BAR
          # background: true
          # working_directory: /root
          # no_output_timeout: 1h
          # when: always or on_success or on_fail (default on_success)

      - save_cache:
          key: my-app-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ .Revision }}-{{ .Environment.CI }}
          paths:
            - ~/test/

      - deploy:
          name: Deploy it
          command: |
            echo "deploy!!!"

      # - store_artifacts:
      #     path: /code/test-results
      #     destination: prefix

      # - store_test_results:
      #     path: /tmp/test-results

      # - add_ssh_keys:
      #     fingerprints:
      #       - "b7:35:a6:4e:9b:0d:6d:d4:78:1e:9a:97:2a:66:6b:be"
