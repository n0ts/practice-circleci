defaults: &defaults
  docker:
    - image: n0ts/ubuntu
      user: ubuntu
  working_directory: /work/practice-circleci

version: 2

jobs:
  build:
    # The resource classes are as follows:
    # small: 1CPU and 1RAM
    # medium: 2CPU and 4RAM (current 1.0 default)
    # large: 4CPU and 8RAM
    ##resource_class: large

    docker:
      - image: n0ts/docker-circleci
        user: docker

    environment:
      - CI: true

    working_directory: /work/practice-circleci

    parallelism: 2

    steps:
      - checkout

  test1:
    <<: *defaults
    steps:
      - run:
          name: Run test 1
          command: |
            echo "Run test1 - $(date)"
            sleep 5
            echo "Done test1 - $(date)"
      - run:
          name: Hello test 1
          command: |
            mkdir -p workspace
            echo "Hello, world! from test 1 - $(date)" > workspace/echo-output

      - persist_to_workspace:
          root: workspace
          paths:
            - echo-output

  test2:
    <<: *defaults
    steps:
      - run:
          name: Run test 2
          command: |
            echo "Run test2 - $(date)"
            sleep 10
            echo "Done test2 - $(date)"
      - attach_workspace:
          at: /work/practice-circleci/workspace

      - run:
          name: Check workspace
          command: |
            if [[ -f /work/practice-circleci/workspace/echo-output ]]; then
                cat /work/practice-circleci/workspace/echo-output
            else
                echo "Nope!"; exit 1
            fi

  test3:
    <<: *defaults
    steps:
      - run:
          name: Run test 3
          command: |
            echo "Run test3 - $(date)"
            sleep 10
            echo "Done test3 - $(date)"

  deploy:
    <<: *defaults
    steps:
      - deploy:
          name: Deploy
          command: |
            echo "Deploy - $(date)"

workflows:
  version: 2

  build-and-test:
    jobs:
      - build
      - test1:
          requires:
            - build
      - test2:
          requires:
            - build
            - test1
      - test3
          requires:
            - build
      - deploy:
          requires:
            - test1
            - test2
      # - test_dev:
      #     filters:
      #       branches:
      #         only: dev
